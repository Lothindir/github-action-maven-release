name: Automatic build and release on Github with Maven
description: Build, tag, release and upload to Github using Maven
author: Lothindir
inputs:
  repo-token:
    description: "GitHub secret token"
    required: true
    type: string
  ssh-private-key:
    description: 'The SSH private key used during the maven release git commit'
    required: true
    type: string

  recurring-tag:
    description: 'Create and publish a recurring tag (latest/nightly/...)'
    required: false
    default: true
    type: boolean
  recurring-tag-name:
    description: 'The name for the recurring tag'
    required: false
    default: 'latest'
    type: string
  version-tag:
    description: 'Create and publish a tag for each version'
    required: false
    default: true
    type: boolean
  version-tag-prefix:
    description: 'The prefix for the version tag'
    required: false
    default: 'v'
    type: string

  prerelease:
    description: 'Release as a prerelease on Github'
    required: false
    default: false
    type: boolean
  draft:
    description: 'Release as a draft'
    required: false
    default: false
    type: boolean
  files:
    description: 'The files to include in the release artifacts'
    required: true
    type: string

  increment-version:
    description: 'Define version to increment <- Patch by default'
    required: false
    default: 'patch'
    type: choice
    options:
      - 'major'
      - 'minor'
      - 'patch'
  maven-args:
    description: 'The arguments to pass to maven on release'
    required: false
    default: '-Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=true'
  build-tag:
    description: 'The name of the build tag used to keep track of the last release (can be ignored)'
    required: false
    default: 'z_build'
    type: string

  git-release-bot-name:
    description: 'The git user name for committing the release'
    required: false
    default: 'release-bot'
    type: string
  git-release-bot-email:
    description: 'The git user email for committing the release'
    required: false
    default: 'release-bot@github.com'
    type: string
  release-branch-name:
    description: 'Filter the branch to execute the release on'
    required: false
    default: 'main'
    type: string
  skip-bot-release-check:
    description: 'Skip the git fetch and reset executed for safety by this action'
    required: false
    default: false
    type: boolean

outputs:
  released-version:
    description: 'The version that has been released'
    value: ${{ steps.getBuildVersion.outputs.next-version }}

runs:
  using: composite
  steps:
    - run: echo ${{ inputs.build-tag }}
      shell: bash

    - name: Get Project Version from pom.xml
      uses: entimaniac/read-pom-version-action@1.0.0
      id: getVersion

    - name: Get Build Version
      uses: terradatum/semver-action@main
      id: getBuildVersion
      with:
        version: ${{ steps.getVersion.outputs.version }}
        package-manager-type: 'maven'
        bump: ${{ inputs.increment-version }}

    - name: Check if previous build tag exists
      uses: mukunku/tag-exists-action@v1.0.0
      id: checkBuildTag
      with:
        tag: ${{ inputs.build-tag }}
      env:
        GITHUB_TOKEN: ${{ inputs.repo-token }}

    - name: Checkout previous build tag
      if: ${{ inputs.version-tag == 'true' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.build-tag }}
        path: ${{ env.GITHUB_WORKSPACE }}/${{ inputs.build-tag }}

    - name: Create tag
      if: ${{ inputs.version-tag == 'true' && steps.checkBuildTag.outputs.exists == 'true' }}
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ inputs.version-tag-prefix }}${{ steps.getBuildVersion.outputs.next-version }}

    - name: Checkout previous build tag
      if: ${{ inputs.version-tag == 'true' && steps.checkBuildTag.outputs.exists == 'true' }}
      uses: actions/checkout@v3
        
    - name: Build with Maven
      uses: lothindir/github-actions-maven-release@master
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}
        git-release-bot-name: ${{ inputs.git-release-bot-name }}
        git-release-bot-email: ${{ inputs.git-release-bot-email }}
        release-branch-name: "main"
        version-increment: ${{ inputs.increment-version }}
        skip-bot-release-check: ${{ inputs.skip-bot-release-check }}
        maven-args: '${{ inputs.maven-args }} -Dtag=$BUILD_TAG'
      env:
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64/

    - name: "Publish latest"
      if: ${{ inputs.recurring-tag == 'true' }}
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ inputs.repo-token }}"
        automatic_release_tag: ${{ inputs.recurring-tag-name }}
        draft: ${{ inputs.draft }}
        prerelease: ${{ inputs.prerelease }}
        title: "Sprint release"
        files: ${{ inputs.files }}

    - name: "Publish version"
      if: ${{ inputs.version-tag == 'true' }}
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ inputs.repo-token }}"
        automatic_release_tag: ${{ inputs.version-tag-prefix }}${{ steps.getBuildVersion.outputs.next-version }}
        draft: ${{ inputs.draft }}
        prerelease: ${{ inputs.prerelease }}
        title: "Sprint release - ${{ inputs.version-tag-prefix }}${{ steps.getBuildVersion.outputs.next-version }}"
        files: ${{ inputs.files }}
